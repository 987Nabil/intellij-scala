### META-INF/compiler-integration.xml
displayname.scala.compile.server=Scala Compile Server

### org/jetbrains/plugins/scala/compiler/CompileServerLauncher.scala
cannot.start.scala.compile.server=Cannot start Scala compile server
required.file.not.found.paths=Required file(s) not found: {0}
can.t.find.default.jdk=Can't find default jdk
cant.find.jdk=Can''t find jdk: {0}
compile.server.terminated.unexpectedly.0.port.1.pid=Compile server terminated unexpectedly<br>(port: {0}, pid: {1})

### org/jetbrains/plugins/scala/compiler/CompileServerManager.scala
scala.compile.server.title=Scala Compile Server
action.run=&Run
start.compile.server=Start compile server
action.stop=&Stop
shutdown.compile.server=Shutdown compile server
action.configure=&Configure...
configure.compile.server=Configure compile server
compile.server.stopped.due.to.inactivity=Compile server stopped due to inactivity

### org/jetbrains/plugins/scala/compiler/CompileServerNotificationsService.scala
wrong.jdk.action.use.jdk=Use JDK {0}

### org/jetbrains/plugins/scala/compiler/EnsureModulesHaveDifferentProdAndTestOutputsTask.scala
shared.compile.output.paths.in.scala.modules=Shared compile output paths in Scala module(s)
production.and.test.output.paths.are.shared.in=Production and test output paths are shared in: {0}
split.output.paths.automatically=Split output path(s) automatically
cancel.compilation=Cancel compilation

### org/jetbrains/plugins/scala/compiler/ScalaCompileServerForm.form
#ScalaCompileServer UI
jvm.options=VM &options:
jvm.maximum.heap.size.mb=Maximum &heap size, MB:
jdk=&JDK:
minutes=minutes
compile.server.jvm.command.line.parameters=Compile server JVM command line parameters
compile.server.shutdown.if.idle.for=Stop if idle for
compile.server.use.for.scala=Use compile server
compile.server.parallelism=threads
compile.server.parallel.compilation=Compile independent modules in parallel, in up to

### org/jetbrains/plugins/scala/compiler/ScalaCompileServerForm.java
compile.server.new.project.restart=To change the process working directory, the server has to be restarted on each project change.
compile.server.use.project.home=Start process in &project directory
compile.server.description=The JDK is used to instantiate the compile server and to invoke \nan in-process Java compiler (when JDK and module SDK match).

### org/jetbrains/plugins/scala/compiler/actions/internal/ScalaCollectShortTroubleshootingInfoAction.scala
scala.collect.troubleshooting.information.short.action.text=(Scala) Collect Troubleshooting Information Short
scala.collect.troubleshooting.information.short.action.description=Collect Scala Plugin and IntelliJ IDEA versions to quickly paste them to YouTrack
short.troubleshooting.summary.copied.to.your.clipboard.with.summary=Short troubleshooting summary copied to your clipboard\n{0}

### org/jetbrains/plugins/scala/compiler/charts/ui/ActionPanel.scala
compilation.charts.reset.zoom.action.text=Reset vertical zoom
compilation.charts.reset.zoom.action.description=Reset vertical zoom for compilation charts
compilation.charts.zoom.out.action.text=Vertical zoom out
compilation.charts.zoom.out.action.description=Vertical zoom out for compilation charts
compilation.charts.zoom.in.action.text=Vertical zoom in
compilation.charts.zoom.in.action.description=Vertical zoom in for compilation charts

### org/jetbrains/plugins/scala/compiler/charts/ui/CompilationChartsBuildToolWindowNodeFactory.scala
compilation.charts.title=Chart

### org/jetbrains/plugins/scala/compiler/highlighting/CompilerEventGeneratingClient.scala
highlighting.compilation.progress=Highlighting: {0}

### org/jetbrains/plugins/scala/compiler/highlighting/CompilerHighlightingService.scala
highlighting.compilation=Error/Warning highlighting

### org/jetbrains/plugins/scala/compiler/highlighting/ToggleCompilerHighlightingAction.scala
scala.project.settings.form.compiler.highlighting.scala2=Use compiler for error highlighting in Scala
scala.project.settings.form.compiler.highlighting.scala3=Use compiler for error highlighting in Scala 3
scala.project.settings.form.compiler.highlighting.tooltip=Use error messages directly from the compiler instead of the built-in highlighter. This will result in error highlighting that is more precise, but may show up more slowly and inspections and quickfixes may not be available.

### org/jetbrains/plugins/scala/compiler/package.scala
wrong.jdk.action.open.compile.server.settings=Open Compile Server settings
unexpected.sdk.type.for.sdk=Unexpected sdk type: ''{0}'' for sdk {1}
