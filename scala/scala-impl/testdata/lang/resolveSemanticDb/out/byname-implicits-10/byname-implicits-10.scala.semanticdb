
ä#tests/pos/byname-implicits-10.scala*
_empty_/Foo#*Foo€*)
_empty_/Foo#`<init>`(). €@*<init>€*
_empty_/Foo#[T]	*T€*
_empty_/Foo.
 *Foo€*"
_empty_/Foo.pair().  *pair€* 
_empty_/Foo.pair().[T]	*T€* 
_empty_/Foo.pair().[U]	*U€*(
_empty_/Foo.pair().(fooT)  *fooT€*(
_empty_/Foo.pair().(fooU)  *fooU€*
local0 *$anon€* 
_empty_/Foo.int().  *int€*
local1 *$anon€*&
_empty_/Foo.string().  *string€*
local2 *$anon€*
_empty_/Test.
 *Test€*#
local3 *$_lazy_implicit_$3€2
 	_empty_/Foo#2!
	 	_empty_/Foo#`<init>`().2

 _empty_/Foo#[T]2
 
_empty_/Foo.2!
 _empty_/Foo.pair().2$
 _empty_/Foo.pair().[T]2$
 _empty_/Foo.pair().[U]2'
# '_empty_/Foo.pair().(fooT)2
, /_empty_/Foo#2$
1 2_empty_/Foo.pair().[T]2$
4 5_empty_/Foo.pair().[U]2'
9 =_empty_/Foo.pair().(fooU)2
B E_empty_/Foo#2$
G H_empty_/Foo.pair().[U]2$
J K_empty_/Foo.pair().[T]2
P S_empty_/Foo#2$
U V_empty_/Foo.pair().[T]2$
X Y_empty_/Foo.pair().[U]2
^ ^local02
b e_empty_/Foo#2$
g h_empty_/Foo.pair().[T]2$
j k_empty_/Foo.pair().[U]2 
 _empty_/Foo.int().2
 _empty_/Foo#2
 
scala/Int#2
 local12
# &_empty_/Foo#2
' *
scala/Int#2#
 _empty_/Foo.string().2
 _empty_/Foo#2"
 !scala/Predef.String#2
% %local22
) ,_empty_/Foo#2"
- 3scala/Predef.String#2
 _empty_/Test.2(
		 scala/Predef.implicitly().2
		 _empty_/Foo#2
		 
scala/Int#2"
		 scala/Predef.String#2!
	 	  _empty_/Foo.pair().PZ D8781D4882E72E9321AB5E67CB1D0612