
´%tests/pos/gadt-eval.scala*
_empty_/Exp# *Exp€*)
_empty_/Exp#`<init>`(). €@*<init>€*
_empty_/Exp#[T]	*T€*
_empty_/Lit# €*Lit€*)
_empty_/Lit#`<init>`(). €@*<init>€*/
_empty_/Lit#`<init>`().(value) €*value€*#
_empty_/Lit#value. €*value€* 
_empty_/Lit#copy().*copy€*(
_empty_/Lit#copy().(value)*value€*4
_empty_/Lit#copy$default$1().*copy$default$1€*
_empty_/Lit#_1().*_1€*
_empty_/Lit.
 *Lit€*"
_empty_/Lit.apply().*apply€*)
_empty_/Lit.apply().(value)*value€*&
_empty_/Lit.unapply().*unapply€*'
_empty_/Lit.unapply().(x$1)*x$1€*(
_empty_/Lit.toString().*toString€*
_empty_/Pair# €*Pair€**
_empty_/Pair#`<init>`(). €@*<init>€*,
_empty_/Pair#`<init>`().(fst) €*fst€*,
_empty_/Pair#`<init>`().(snd) €*snd€*
_empty_/Pair#[A]	*A€*
_empty_/Pair#[B]	*B€* 
_empty_/Pair#fst. €*fst€* 
_empty_/Pair#snd. €*snd€*!
_empty_/Pair#copy().*copy€*!
_empty_/Pair#copy().[A]	*A€*!
_empty_/Pair#copy().[B]	*B€*%
_empty_/Pair#copy().(fst)*fst€*%
_empty_/Pair#copy().(snd)*snd€*5
_empty_/Pair#copy$default$1().*copy$default$1€*+
!_empty_/Pair#copy$default$1().[A]	*A€*+
!_empty_/Pair#copy$default$1().[B]	*B€*5
_empty_/Pair#copy$default$2().*copy$default$2€*+
!_empty_/Pair#copy$default$2().[A]	*A€*+
!_empty_/Pair#copy$default$2().[B]	*B€*
_empty_/Pair#_1().*_1€*
_empty_/Pair#_2().*_2€*
_empty_/Pair.
 *Pair€*#
_empty_/Pair.apply().*apply€*"
_empty_/Pair.apply().[A]	*A€*"
_empty_/Pair.apply().[B]	*B€*&
_empty_/Pair.apply().(fst)*fst€*&
_empty_/Pair.apply().(snd)*snd€*'
_empty_/Pair.unapply().*unapply€*$
_empty_/Pair.unapply().[A]	*A€*$
_empty_/Pair.unapply().[B]	*B€*(
_empty_/Pair.unapply().(x$1)*x$1€*)
_empty_/Pair.toString().*toString€*
_empty_/Test.
 *Test€*!
_empty_/Test.eval().*eval€*!
_empty_/Test.eval().[T]	*T€*!
_empty_/Test.eval().(e)*e€*
local0 €*x€*
local1 €	*A$1€*
local2 €	*B$1€*
local3 €*a€*
local4 €*b€*#
_empty_/Test.eval2().*eval2€*"
_empty_/Test.eval2().[T]	*T€*"
_empty_/Test.eval2().(e)*e€*
local5 €*e€*
local6 €*e€*
local7 €	*t1€*
local8 €	*t2€2
 _empty_/Exp#2!
 _empty_/Exp#`<init>`().2
 _empty_/Exp#[T]2
 _empty_/Lit#2%
 _empty_/Lit#`<init>`().2
 
scala/Int#2
# &_empty_/Exp#2
' *
scala/Int#2 
 _empty_/Lit#value.2
_empty_/Lit#copy().2
 _empty_/Lit#_1().2
 _empty_/Lit.2
_empty_/Lit.apply().2
 _empty_/Pair#2&
 _empty_/Pair#`<init>`().2
 _empty_/Exp#2
  _empty_/Pair#[A]2
( +_empty_/Exp#2
, -_empty_/Pair#[B]2
8 ;_empty_/Exp#2
= >_empty_/Pair#[A]2
@ A_empty_/Pair#[B]2
 _empty_/Pair#[A]2
 _empty_/Pair#[B]2
 _empty_/Pair#fst.2
# &_empty_/Pair#snd.2
_empty_/Pair#copy().2 
 _empty_/Pair#_1().2 
( (_empty_/Pair#_2().2
 _empty_/Pair.2
_empty_/Pair.apply().2!
_empty_/Pair.unapply().2
 _empty_/Test.2"
 
_empty_/Test.eval().2%
 _empty_/Test.eval().[T]2%
 _empty_/Test.eval().(e)2
 _empty_/Exp#2%
 _empty_/Test.eval().[T]2%
 _empty_/Test.eval().[T]2%
 _empty_/Test.eval().(e)2$
 _empty_/Lit.unapply().2
	 _empty_/Lit.2
 local02
 local02%
 _empty_/Pair.unapply().2
	 _empty_/Pair.2
 local12
 local22
 local32
 local42#
		 scala/Tuple2.apply().2"
		 _empty_/Test.eval().2
		 local32"
		 _empty_/Test.eval().2
		 local42#
 _empty_/Test.eval2().2&
 _empty_/Test.eval2().[T]2&
 _empty_/Test.eval2().(e)2
 _empty_/Exp#2&
 _empty_/Test.eval2().[T]2&
 _empty_/Test.eval2().[T]2&
  _empty_/Test.eval2().(e)2
	 
local52
 _empty_/Lit#2 
 _empty_/Lit#value.2
 local52
	 
local62
 _empty_/Pair#2
 local72
 local82#
 scala/Tuple2.apply().2"
 _empty_/Test.eval().2
 _empty_/Pair#fst.2
 local62"
 _empty_/Test.eval().2
 _empty_/Pair#snd.2
 local6PZ F581F6091C9C83D79860CEC594155E36