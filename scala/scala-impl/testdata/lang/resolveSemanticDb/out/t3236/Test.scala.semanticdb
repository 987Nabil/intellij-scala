
ý>tests/pos/t3236/Test.scala*
_empty_/Test.
 *Test€**
_empty_/Test.theClass. €*theClass€*-
_empty_/Test.annotation().*
annotation€*'
_empty_/Test.annotation().[T]	*T€*C
+_empty_/Test.annotation().(annotationClass)*annotationClass€*9
&_empty_/Test.annotation().(methodName)*
methodName€*#
_empty_/Test.check().*check€*"
_empty_/Test.check().[T]	*T€*"
_empty_/Test.check().[U]	*U€*
local0 *value€*>
&_empty_/Test.check().(annotationClass)*annotationClass€*4
!_empty_/Test.check().(methodName)*
methodName€*0
_empty_/Test.check().(expected)*expected€*
local1 €*a€2:
  40scala/reflect/Selectable.reflectiveSelectable().2#
 scala/reflect/Selectable.2
 scala/reflect/2
 scala/2
 _empty_/Test.2
 
scala/App#2$
 _empty_/Test.theClass.2%
 scala/Predef.classOf().2%
 '_empty_/AnnotationTest#2(
 _empty_/Test.annotation().2+
 _empty_/Test.annotation().[T]2.
+ 5 java/lang/annotation/Annotation#2#
  *java/lang/annotation/2
 
java/lang/2
 java/29
7 F+_empty_/Test.annotation().(annotationClass)2!
H Mscala/Predef.Class#2+
N O_empty_/Test.annotation().[T]24
R \&_empty_/Test.annotation().(methodName)2"
^ dscala/Predef.String#2+
g h_empty_/Test.annotation().[T]27
 )java/lang/reflect/Method#getAnnotation().22
 $java/lang/Class#getDeclaredMethod().2$
 _empty_/Test.theClass.24
 )&_empty_/Test.annotation().(methodName)2+
 _empty_/Test.annotation().[T]29
 '+_empty_/Test.annotation().(annotationClass)2#
		 _empty_/Test.check().2&
		 _empty_/Test.check().[T]2&
		 _empty_/Test.check().[U]2
	4	 5
scala/`&`#2.
	)	 3 java/lang/annotation/Annotation#2#
		 (java/lang/annotation/2
		 
java/lang/2
		 java/2
	<	 Alocal02&
	E	 F_empty_/Test.check().[T]24
	K	 Z&_empty_/Test.check().(annotationClass)2!
	\	 ascala/Predef.Class#2&
	b	 c_empty_/Test.check().[U]2/
	f	 p!_empty_/Test.check().(methodName)2"
	r	 xscala/Predef.String#2.
		z	 ‚_empty_/Test.check().(expected)2(

	„	 …_empty_/Test.check().[T]2

	ˆ	 Œscala/Unit#2


 	local12(


 _empty_/Test.annotation().24


 &&_empty_/Test.check().(annotationClass)2/

(
 2!_empty_/Test.check().(methodName)2$
 
scala/Predef.assert().2
 scala/Any#`!=`().2
 local12&
Z [scala/StringContext#s().2*
 scala/StringContext.apply().24
/ >&_empty_/Test.check().(annotationClass)2/
P Z!_empty_/Test.check().(methodName)2$
 
scala/Predef.assert().2
 scala/Any#`==`().26
 (scala/reflect/Selectable#applyDynamic().2>
 0scala/reflect/Selectable.reflectiveSelectable().2
 local12-
  _empty_/Test.check().(expected)2&
t uscala/StringContext#s().2*
$ $scala/StringContext.apply().2
@ Alocal12/
F P!_empty_/Test.check().(methodName)2-
l t_empty_/Test.check().(expected)2#
 _empty_/Test.check().2%
 scala/Predef.classOf().2(
 !_empty_/BooleanAnnotation#2,
7 B_empty_/Constants#BooleanTrue.2 
- 6_empty_/Constants#2#
 _empty_/Test.check().2%
 scala/Predef.classOf().2%
 _empty_/ByteAnnotation#2%
4 8_empty_/Constants#Byte.2 
* 3_empty_/Constants#2#
 _empty_/Test.check().2%
 scala/Predef.classOf().2%
 _empty_/CharAnnotation#2%
4 8_empty_/Constants#Char.2 
* 3_empty_/Constants#2#
 _empty_/Test.check().2%
 scala/Predef.classOf().2&
 _empty_/ShortAnnotation#2&
5 :_empty_/Constants#Short.2 
+ 4_empty_/Constants#2#
 _empty_/Test.check().2%
 scala/Predef.classOf().2$
 _empty_/IntAnnotation#2$
3 6_empty_/Constants#Int.2 
) 2_empty_/Constants#2#
 _empty_/Test.check().2%
 scala/Predef.classOf().2%
 _empty_/LongAnnotation#2%
4 8_empty_/Constants#Long.2 
* 3_empty_/Constants#2#
 _empty_/Test.check().2%
 scala/Predef.classOf().2&
 _empty_/FloatAnnotation#2&
5 :_empty_/Constants#Float.2 
+ 4_empty_/Constants#2#
 _empty_/Test.check().2%
 scala/Predef.classOf().2'
  _empty_/DoubleAnnotation#2'
6 <_empty_/Constants#Double.2 
, 5_empty_/Constants#2#
 _empty_/Test.check().2%
 scala/Predef.classOf().2'
  _empty_/StringAnnotation#2'
6 <_empty_/Constants#String.2 
, 5_empty_/Constants#2#
 _empty_/Test.check().2%
 scala/Predef.classOf().2(
 !_empty_/BooleanAnnotation#20
7 F"_empty_/Constants#InvertedBoolean.2 
- 6_empty_/Constants#2#
 _empty_/Test.check().2%
 scala/Predef.classOf().2%
 _empty_/ByteAnnotation#2-
4 @_empty_/Constants#NegativeByte.2 
* 3_empty_/Constants#2#
 _empty_/Test.check().2%
 scala/Predef.classOf().2&
 _empty_/ShortAnnotation#2.
5 B _empty_/Constants#NegativeShort.2 
+ 4_empty_/Constants#2#
 _empty_/Test.check().2%
 scala/Predef.classOf().2$
 _empty_/IntAnnotation#2,
3 >_empty_/Constants#NegativeInt.2 
) 2_empty_/Constants#2#
 _empty_/Test.check().2%
 scala/Predef.classOf().2%
 _empty_/LongAnnotation#2-
4 @_empty_/Constants#NegativeLong.2 
* 3_empty_/Constants#2#
 _empty_/Test.check().2%
 scala/Predef.classOf().2&
 _empty_/FloatAnnotation#2.
5 B _empty_/Constants#NegativeFloat.2 
+ 4_empty_/Constants#2#
   _empty_/Test.check().2%
   scala/Predef.classOf().2'
    _empty_/DoubleAnnotation#2/
 6  D!_empty_/Constants#NegativeDouble.2 
 ,  5_empty_/Constants#2#
!! _empty_/Test.check().2%
!! scala/Predef.classOf().2'
!!  _empty_/StringAnnotation#2/
!6! D!_empty_/Constants#NegativeString.2 
!,! 5_empty_/Constants#2#
## _empty_/Test.check().2%
## scala/Predef.classOf().2(
## !_empty_/BooleanAnnotation#2-
#7# C_empty_/Constants#BooleanFalse.2 
#-# 6_empty_/Constants#2#
$$ _empty_/Test.check().2%
$$ scala/Predef.classOf().2%
$$ _empty_/ByteAnnotation#22
$4$ E$_empty_/Constants#LiteralCharAsByte.2 
$*$ 3_empty_/Constants#2#
%% _empty_/Test.check().2%
%% scala/Predef.classOf().2%
%% _empty_/CharAnnotation#2,
%4% ?_empty_/Constants#LiteralChar.2 
%*% 3_empty_/Constants#2#
&& _empty_/Test.check().2%
&& scala/Predef.classOf().2&
&& _empty_/ShortAnnotation#23
&5& G%_empty_/Constants#LiteralCharAsShort.2 
&+& 4_empty_/Constants#2#
'' _empty_/Test.check().2%
'' scala/Predef.classOf().2$
'' _empty_/IntAnnotation#21
'3' C#_empty_/Constants#LiteralCharAsInt.2 
')' 2_empty_/Constants#2#
(( _empty_/Test.check().2%
(( scala/Predef.classOf().2%
(( _empty_/LongAnnotation#22
(4( E$_empty_/Constants#LiteralCharAsLong.2 
(*( 3_empty_/Constants#2#
** _empty_/Test.check().2%
** scala/Predef.classOf().2%
** _empty_/LongAnnotation#21
*4* D#_empty_/Constants#LiteralIntAsLong.2 
*** 3_empty_/Constants#PZ FAFCF8EAFE8A3C3DFA5A86271B15B3A0