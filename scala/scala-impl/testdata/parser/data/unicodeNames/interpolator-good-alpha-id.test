object O2 {
  ab"${1}"
  ab_12"${1}"
  _1"${1}"
  _q"${1}"

  ùìÖ"${1}"
  êêÄ"${1}"
  «Ö"${1}"
  ·õÆ"${1}"

  implicit class MyInterpolators(sc: StringContext) {
    def ab(subs: Any*): String = ???
    def ab_12(subs: Any*): String = ???
    def _1(subs: Any*): String = ???
    def _q(subs: Any*): String = ???

    def ùìÖ(subs: Any*): String = ??? // category: Ll
    def êêÄ(subs: Any*): String = ??? // category: Lu
    def «Ö(subs: Any*): String = ??? // category: Lt
    def ·õÆ(subs: Any*): String = ??? // category: Nl
  }
}
-----
ScalaFile
  ScObject: O2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('O2')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        InterpolatedStringLiteral
          InterpolatedExpressionPrefix: ab
            PsiElement(interpolated string id)('ab')
          PsiElement(interpolated string)('"')
          PsiElement(interpolated string injection)('$')
          BlockExpression
            PsiElement({)('{')
            IntegerLiteral
              PsiElement(integer)('1')
            PsiElement(})('}')
          PsiElement(interpolated string end)('"')
        PsiWhiteSpace('\n  ')
        InterpolatedStringLiteral
          InterpolatedExpressionPrefix: ab_12
            PsiElement(interpolated string id)('ab_12')
          PsiElement(interpolated string)('"')
          PsiElement(interpolated string injection)('$')
          BlockExpression
            PsiElement({)('{')
            IntegerLiteral
              PsiElement(integer)('1')
            PsiElement(})('}')
          PsiElement(interpolated string end)('"')
        PsiWhiteSpace('\n  ')
        InterpolatedStringLiteral
          InterpolatedExpressionPrefix: _1
            PsiElement(interpolated string id)('_1')
          PsiElement(interpolated string)('"')
          PsiElement(interpolated string injection)('$')
          BlockExpression
            PsiElement({)('{')
            IntegerLiteral
              PsiElement(integer)('1')
            PsiElement(})('}')
          PsiElement(interpolated string end)('"')
        PsiWhiteSpace('\n  ')
        InterpolatedStringLiteral
          InterpolatedExpressionPrefix: _q
            PsiElement(interpolated string id)('_q')
          PsiElement(interpolated string)('"')
          PsiElement(interpolated string injection)('$')
          BlockExpression
            PsiElement({)('{')
            IntegerLiteral
              PsiElement(integer)('1')
            PsiElement(})('}')
          PsiElement(interpolated string end)('"')
        PsiWhiteSpace('\n\n  ')
        InterpolatedStringLiteral
          InterpolatedExpressionPrefix: ùìÖ
            PsiElement(interpolated string id)('ùìÖ')
          PsiElement(interpolated string)('"')
          PsiElement(interpolated string injection)('$')
          BlockExpression
            PsiElement({)('{')
            IntegerLiteral
              PsiElement(integer)('1')
            PsiElement(})('}')
          PsiElement(interpolated string end)('"')
        PsiWhiteSpace('\n  ')
        InterpolatedStringLiteral
          InterpolatedExpressionPrefix: êêÄ
            PsiElement(interpolated string id)('êêÄ')
          PsiElement(interpolated string)('"')
          PsiElement(interpolated string injection)('$')
          BlockExpression
            PsiElement({)('{')
            IntegerLiteral
              PsiElement(integer)('1')
            PsiElement(})('}')
          PsiElement(interpolated string end)('"')
        PsiWhiteSpace('\n  ')
        InterpolatedStringLiteral
          InterpolatedExpressionPrefix: «Ö
            PsiElement(interpolated string id)('«Ö')
          PsiElement(interpolated string)('"')
          PsiElement(interpolated string injection)('$')
          BlockExpression
            PsiElement({)('{')
            IntegerLiteral
              PsiElement(integer)('1')
            PsiElement(})('}')
          PsiElement(interpolated string end)('"')
        PsiWhiteSpace('\n  ')
        InterpolatedStringLiteral
          InterpolatedExpressionPrefix: ·õÆ
            PsiElement(interpolated string id)('·õÆ')
          PsiElement(interpolated string)('"')
          PsiElement(interpolated string injection)('$')
          BlockExpression
            PsiElement({)('{')
            IntegerLiteral
              PsiElement(integer)('1')
            PsiElement(})('}')
          PsiElement(interpolated string end)('"')
        PsiWhiteSpace('\n\n  ')
        ScClass: MyInterpolators
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(implicit)('implicit')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('MyInterpolators')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: sc
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('sc')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: StringContext
                      CodeReferenceElement: StringContext
                        PsiElement(identifier)('StringContext')
                PsiElement())(')')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: ab
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('ab')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: subs
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('subs')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Any
                          CodeReferenceElement: Any
                            PsiElement(identifier)('Any')
                        PsiElement(identifier)('*')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: ???
                  PsiElement(identifier)('???')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: ab_12
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('ab_12')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: subs
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('subs')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Any
                          CodeReferenceElement: Any
                            PsiElement(identifier)('Any')
                        PsiElement(identifier)('*')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: ???
                  PsiElement(identifier)('???')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: _1
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('_1')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: subs
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('subs')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Any
                          CodeReferenceElement: Any
                            PsiElement(identifier)('Any')
                        PsiElement(identifier)('*')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: ???
                  PsiElement(identifier)('???')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: _q
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('_q')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: subs
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('subs')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Any
                          CodeReferenceElement: Any
                            PsiElement(identifier)('Any')
                        PsiElement(identifier)('*')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: ???
                  PsiElement(identifier)('???')
              PsiWhiteSpace('\n\n    ')
              ScFunctionDefinition: ùìÖ
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('ùìÖ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: subs
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('subs')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Any
                          CodeReferenceElement: Any
                            PsiElement(identifier)('Any')
                        PsiElement(identifier)('*')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: ???
                  PsiElement(identifier)('???')
              PsiWhiteSpace(' ')
              PsiComment(comment)('// category: Ll')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: êêÄ
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('êêÄ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: subs
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('subs')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Any
                          CodeReferenceElement: Any
                            PsiElement(identifier)('Any')
                        PsiElement(identifier)('*')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: ???
                  PsiElement(identifier)('???')
              PsiWhiteSpace(' ')
              PsiComment(comment)('// category: Lu')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: «Ö
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('«Ö')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: subs
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('subs')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Any
                          CodeReferenceElement: Any
                            PsiElement(identifier)('Any')
                        PsiElement(identifier)('*')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: ???
                  PsiElement(identifier)('???')
              PsiWhiteSpace(' ')
              PsiComment(comment)('// category: Lt')
              PsiWhiteSpace('\n    ')
              ScFunctionDefinition: ·õÆ
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(def)('def')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('·õÆ')
                Parameters
                  ParametersClause
                    PsiElement(()('(')
                    Parameter: subs
                      AnnotationsList
                        <empty list>
                      Modifiers
                        <empty list>
                      PsiElement(identifier)('subs')
                      PsiElement(:)(':')
                      PsiWhiteSpace(' ')
                      ParameterType
                        SimpleType: Any
                          CodeReferenceElement: Any
                            PsiElement(identifier)('Any')
                        PsiElement(identifier)('*')
                    PsiElement())(')')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                SimpleType: String
                  CodeReferenceElement: String
                    PsiElement(identifier)('String')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                ReferenceExpression: ???
                  PsiElement(identifier)('???')
              PsiWhiteSpace(' ')
              PsiComment(comment)('// category: Nl')
              PsiWhiteSpace('\n  ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
