//> using options -Xfatal-warnings -deprecation -feature

// check that deprecation warnings of Red are not caught in its enclosing scope
enum Color(rgb: Int) {

  @deprecated("stop using Red", "0.1")
  case Red extends Color(0xff0000)

  case Green extends Color(0x00ff00)

  case Blue  extends Color(0x0000ff)

  final def colorCode: Option[Int] = this match {
    case Red => None
    case _   => Some(rgb)
  }

}

object Color {
  val deprecatedMembers = Set(Red)
}
-----
ScalaFile
  PsiElement(SCALA_DIRECTIVE)
    ScDirectiveToken(tDIRECTIVE_PREFIX)('//>')
    PsiWhiteSpace(' ')
    ScDirectiveToken(tDIRECTIVE_COMMAND)('using')
    PsiWhiteSpace(' ')
    ScDirectiveToken(tDIRECTIVE_KEY)('options')
    PsiWhiteSpace(' ')
    ScDirectiveToken(tDIRECTIVE_VALUE)('-Xfatal-warnings')
    PsiWhiteSpace(' ')
    ScDirectiveToken(tDIRECTIVE_VALUE)('-deprecation')
    PsiWhiteSpace(' ')
    ScDirectiveToken(tDIRECTIVE_VALUE)('-feature')
  PsiWhiteSpace('\n\n')
  ScEnum: Color
    PsiComment(comment)('// check that deprecation warnings of Red are not caught in its enclosing scope')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(enum)('enum')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Color')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: rgb
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('rgb')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScEnumCases: Red
          AnnotationsList
            Annotation
              PsiElement(@)('@')
              AnnotationExpression
                ConstructorInvocation
                  SimpleType: deprecated
                    CodeReferenceElement: deprecated
                      PsiElement(identifier)('deprecated')
                  ArgumentList
                    PsiElement(()('(')
                    StringLiteral
                      PsiElement(string content)('"stop using Red"')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    StringLiteral
                      PsiElement(string content)('"0.1"')
                    PsiElement())(')')
          Modifiers
            <empty list>
          PsiWhiteSpace('\n  ')
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumSingletonCase: Red
            PsiElement(identifier)('Red')
            PsiWhiteSpace(' ')
            ExtendsBlock
              PsiElement(extends)('extends')
              PsiWhiteSpace(' ')
              TemplateParents
                ConstructorInvocation
                  SimpleType: Color
                    CodeReferenceElement: Color
                      PsiElement(identifier)('Color')
                  ArgumentList
                    PsiElement(()('(')
                    IntegerLiteral
                      PsiElement(integer)('0xff0000')
                    PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScEnumCases: Green
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumSingletonCase: Green
            PsiElement(identifier)('Green')
            PsiWhiteSpace(' ')
            ExtendsBlock
              PsiElement(extends)('extends')
              PsiWhiteSpace(' ')
              TemplateParents
                ConstructorInvocation
                  SimpleType: Color
                    CodeReferenceElement: Color
                      PsiElement(identifier)('Color')
                  ArgumentList
                    PsiElement(()('(')
                    IntegerLiteral
                      PsiElement(integer)('0x00ff00')
                    PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScEnumCases: Blue
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(case)('case')
          PsiWhiteSpace(' ')
          ScEnumSingletonCase: Blue
            PsiElement(identifier)('Blue')
            PsiWhiteSpace('  ')
            ExtendsBlock
              PsiElement(extends)('extends')
              PsiWhiteSpace(' ')
              TemplateParents
                ConstructorInvocation
                  SimpleType: Color
                    CodeReferenceElement: Color
                      PsiElement(identifier)('Color')
                  ArgumentList
                    PsiElement(()('(')
                    IntegerLiteral
                      PsiElement(integer)('0x0000ff')
                    PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScFunctionDefinition: colorCode
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(final)('final')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('colorCode')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Option[Int]
            SimpleType: Option
              CodeReferenceElement: Option
                PsiElement(identifier)('Option')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MatchStatement
            ThisReference
              PsiElement(this)('this')
            PsiWhiteSpace(' ')
            PsiElement(match)('match')
            PsiWhiteSpace(' ')
            PsiElement({)('{')
            PsiWhiteSpace('\n    ')
            CaseClauses
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                StableElementPattern
                  ReferenceExpression: Red
                    PsiElement(identifier)('Red')
                PsiWhiteSpace(' ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  ReferenceExpression: None
                    PsiElement(identifier)('None')
              PsiWhiteSpace('\n    ')
              CaseClause
                PsiElement(case)('case')
                PsiWhiteSpace(' ')
                WildcardPattern
                  PsiElement(_)('_')
                PsiWhiteSpace('   ')
                PsiElement(=>)('=>')
                PsiWhiteSpace(' ')
                BlockOfExpressions
                  MethodCall
                    ReferenceExpression: Some
                      PsiElement(identifier)('Some')
                    ArgumentList
                      PsiElement(()('(')
                      ReferenceExpression: rgb
                        PsiElement(identifier)('rgb')
                      PsiElement())(')')
            PsiWhiteSpace('\n  ')
            PsiElement(})('}')
        PsiWhiteSpace('\n\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: Color
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Color')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: deprecatedMembers
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: deprecatedMembers
              PsiElement(identifier)('deprecatedMembers')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MethodCall
            ReferenceExpression: Set
              PsiElement(identifier)('Set')
            ArgumentList
              PsiElement(()('(')
              ReferenceExpression: Red
                PsiElement(identifier)('Red')
              PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
