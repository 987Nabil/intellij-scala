//> using options -source future -deprecation -Xfatal-warnings

def r = BigInt(1) to BigInt(3) // error
-----
ScalaFile
  PsiElement(SCALA_DIRECTIVE)
    ScDirectiveToken(tDIRECTIVE_PREFIX)('//>')
    PsiWhiteSpace(' ')
    ScDirectiveToken(tDIRECTIVE_COMMAND)('using')
    PsiWhiteSpace(' ')
    ScDirectiveToken(tDIRECTIVE_KEY)('options')
    PsiWhiteSpace(' ')
    ScDirectiveToken(tDIRECTIVE_VALUE)('-source')
    PsiWhiteSpace(' ')
    ScDirectiveToken(tDIRECTIVE_VALUE)('future')
    PsiWhiteSpace(' ')
    ScDirectiveToken(tDIRECTIVE_VALUE)('-deprecation')
    PsiWhiteSpace(' ')
    ScDirectiveToken(tDIRECTIVE_VALUE)('-Xfatal-warnings')
  PsiWhiteSpace('\n\n')
  ScFunctionDefinition: r
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('r')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    InfixExpression
      MethodCall
        ReferenceExpression: BigInt
          PsiElement(identifier)('BigInt')
        ArgumentList
          PsiElement(()('(')
          IntegerLiteral
            PsiElement(integer)('1')
          PsiElement())(')')
      PsiWhiteSpace(' ')
      ReferenceExpression: to
        PsiElement(identifier)('to')
      PsiWhiteSpace(' ')
      MethodCall
        ReferenceExpression: BigInt
          PsiElement(identifier)('BigInt')
        ArgumentList
          PsiElement(()('(')
          IntegerLiteral
            PsiElement(integer)('3')
          PsiElement())(')')
  PsiWhiteSpace(' ')
  PsiComment(comment)('// error')
