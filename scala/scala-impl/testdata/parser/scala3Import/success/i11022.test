//> using options -Werror -deprecation
@deprecated("no CaseClass")
case class CaseClass(rgb: Int)
-----
ScalaFile
  PsiElement(SCALA_DIRECTIVE)
    ScDirectiveToken(tDIRECTIVE_PREFIX)('//>')
    PsiWhiteSpace(' ')
    ScDirectiveToken(tDIRECTIVE_COMMAND)('using')
    PsiWhiteSpace(' ')
    ScDirectiveToken(tDIRECTIVE_KEY)('options')
    PsiWhiteSpace(' ')
    ScDirectiveToken(tDIRECTIVE_VALUE)('-Werror')
    PsiWhiteSpace(' ')
    ScDirectiveToken(tDIRECTIVE_VALUE)('-deprecation')
  PsiWhiteSpace('\n')
  ScClass: CaseClass
    AnnotationsList
      Annotation
        PsiElement(@)('@')
        AnnotationExpression
          ConstructorInvocation
            SimpleType: deprecated
              CodeReferenceElement: deprecated
                PsiElement(identifier)('deprecated')
            ArgumentList
              PsiElement(()('(')
              StringLiteral
                PsiElement(string content)('"no CaseClass"')
              PsiElement())(')')
    PsiWhiteSpace('\n')
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('CaseClass')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: rgb
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('rgb')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Int
                CodeReferenceElement: Int
                  PsiElement(identifier)('Int')
          PsiElement())(')')
    ExtendsBlock
      <empty list>
