// https://github.com/lampepfl/dotty/issues/12663

final class HookComponentBuilder[Ctx, CtxFn[_]] {
  def asd[A](f: Ctx => A): A = ???
  def asd[A](f: CtxFn[A]): A = ???
}

object HookCtx {
  case class P1[P, H1](props: P, hook1: H1)
}

object HookCtxFn {
  sealed trait P1[P, H1] { type Fn[A] = (P, H1) => A }
}

object Test {
  val b: HookComponentBuilder[
    HookCtx.P1[String, Int],
    HookCtxFn.P1[String, Int]#Fn
  ] = ???

  b.asd($ => $.props.length + $.hook1)
  b.asd((props, hook1) => props.length + hook1)
}

final class HookComponentBuilder2[Ctx, CtxFn[_]] {
  def asd[A](f: Ctx => A): A = ???
  def asd[A](f: CtxFn[A]): A = ???
}

object HookCtx2 {
  case class P1[P, H1](props: P, hook1: H1)
}

object HookCtxFn2 {
  type P1[P, H1] = [A] =>> (P, H1) => A
}

object Test2 {
  val b: HookComponentBuilder2[
    HookCtx2.P1[String, Int],
    HookCtxFn2.P1[String, Int]
  ] = ???

  b.asd($ => $.props.length + $.hook1)
  b.asd((props, hook1) => props.length + hook1)
}

final class Builder[CtxFn[_]] {
  def asd[A](f: Int => A): A = ???
  def asd[A](f: CtxFn[A]): A = ???
}

object Test3 {
  val b1: Builder[[Z] =>> (String, Int) => Z] = ???
  b1.asd(identity)
  b1.asd(_.length + _)

  sealed trait Scala2TL { type F[Z] = (String, Int) => Z }
  val b2: Builder[Scala2TL#F] = b1
  b2.asd(identity)
  b2.asd(_.length + _)

  type Scala3TL = [Z] =>> (String, Int) => Z
  val b3: Builder[Scala3TL] = b1
  b3.asd(identity)
  b3.asd(_.length + _)

  val b4: Builder[({ type F[Z] = (String, Int) => Z })#F] = b1
  b4.asd(identity)
  b4.asd(_.length + _)
}
-----
ScalaFile
  PsiComment(comment)('// https://github.com/lampepfl/dotty/issues/12663')
  PsiWhiteSpace('\n\n')
  ScClass: HookComponentBuilder
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(final)('final')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('HookComponentBuilder')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: Ctx
        PsiElement(identifier)('Ctx')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: CtxFn
        PsiElement(identifier)('CtxFn')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: asd
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('asd')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  FunctionalType: Ctx => A
                    SimpleType: Ctx
                      CodeReferenceElement: Ctx
                        PsiElement(identifier)('Ctx')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: A
            CodeReferenceElement: A
              PsiElement(identifier)('A')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: asd
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('asd')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: CtxFn[A]
                    SimpleType: CtxFn
                      CodeReferenceElement: CtxFn
                        PsiElement(identifier)('CtxFn')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: A
            CodeReferenceElement: A
              PsiElement(identifier)('A')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: HookCtx
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('HookCtx')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScClass: P1
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(case)('case')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('P1')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: P
              PsiElement(identifier)('P')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: H1
              PsiElement(identifier)('H1')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: props
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('props')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: P
                      CodeReferenceElement: P
                        PsiElement(identifier)('P')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                ClassParameter: hook1
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('hook1')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: H1
                      CodeReferenceElement: H1
                        PsiElement(identifier)('H1')
                PsiElement())(')')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: HookCtxFn
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('HookCtxFn')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTrait: P1
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(sealed)('sealed')
          PsiWhiteSpace(' ')
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('P1')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: P
              PsiElement(identifier)('P')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: H1
              PsiElement(identifier)('H1')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              ScTypeAliasDefinition: Fn
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('Fn')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: A
                    PsiElement(identifier)('A')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                FunctionalType: (P, H1) => A
                  TupleType: (P, H1)
                    PsiElement(()('(')
                    TypesList
                      SimpleType: P
                        CodeReferenceElement: P
                          PsiElement(identifier)('P')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: H1
                        CodeReferenceElement: H1
                          PsiElement(identifier)('H1')
                    PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  SimpleType: A
                    CodeReferenceElement: A
                      PsiElement(identifier)('A')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: b
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: b
              PsiElement(identifier)('b')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: HookComponentBuilder[
    HookCtx.P1[String, Int],
    HookCtxFn.P1[String, Int]#Fn
  ]
            SimpleType: HookComponentBuilder
              CodeReferenceElement: HookComponentBuilder
                PsiElement(identifier)('HookComponentBuilder')
            TypeArgumentsList
              PsiElement([)('[')
              PsiWhiteSpace('\n    ')
              ParametrizedType: HookCtx.P1[String, Int]
                SimpleType: HookCtx.P1
                  CodeReferenceElement: HookCtx.P1
                    CodeReferenceElement: HookCtx
                      PsiElement(identifier)('HookCtx')
                    PsiElement(.)('.')
                    PsiElement(identifier)('P1')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace('\n    ')
              TypeProjection: HookCtxFn.P1[String, Int]#Fn
                ParametrizedType: HookCtxFn.P1[String, Int]
                  SimpleType: HookCtxFn.P1
                    CodeReferenceElement: HookCtxFn.P1
                      CodeReferenceElement: HookCtxFn
                        PsiElement(identifier)('HookCtxFn')
                      PsiElement(.)('.')
                      PsiElement(identifier)('P1')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: String
                      CodeReferenceElement: String
                        PsiElement(identifier)('String')
                    PsiElement(,)(',')
                    PsiWhiteSpace(' ')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                    PsiElement(])(']')
                PsiElement(#)('#')
                PsiElement(identifier)('Fn')
              PsiWhiteSpace('\n  ')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n\n  ')
        MethodCall
          ReferenceExpression: b.asd
            ReferenceExpression: b
              PsiElement(identifier)('b')
            PsiElement(.)('.')
            PsiElement(identifier)('asd')
          ArgumentList
            PsiElement(()('(')
            FunctionExpression
              Parameters
                ParametersClause
                  Parameter: $
                    PsiElement(identifier)('$')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              InfixExpression
                ReferenceExpression: $.props.length
                  ReferenceExpression: $.props
                    ReferenceExpression: $
                      PsiElement(identifier)('$')
                    PsiElement(.)('.')
                    PsiElement(identifier)('props')
                  PsiElement(.)('.')
                  PsiElement(identifier)('length')
                PsiWhiteSpace(' ')
                ReferenceExpression: +
                  PsiElement(identifier)('+')
                PsiWhiteSpace(' ')
                ReferenceExpression: $.hook1
                  ReferenceExpression: $
                    PsiElement(identifier)('$')
                  PsiElement(.)('.')
                  PsiElement(identifier)('hook1')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: b.asd
            ReferenceExpression: b
              PsiElement(identifier)('b')
            PsiElement(.)('.')
            PsiElement(identifier)('asd')
          ArgumentList
            PsiElement(()('(')
            FunctionExpression
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: props
                    AnnotationsList
                      <empty list>
                    PsiElement(identifier)('props')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  Parameter: hook1
                    AnnotationsList
                      <empty list>
                    PsiElement(identifier)('hook1')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              InfixExpression
                ReferenceExpression: props.length
                  ReferenceExpression: props
                    PsiElement(identifier)('props')
                  PsiElement(.)('.')
                  PsiElement(identifier)('length')
                PsiWhiteSpace(' ')
                ReferenceExpression: +
                  PsiElement(identifier)('+')
                PsiWhiteSpace(' ')
                ReferenceExpression: hook1
                  PsiElement(identifier)('hook1')
            PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: HookComponentBuilder2
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(final)('final')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('HookComponentBuilder2')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: Ctx
        PsiElement(identifier)('Ctx')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TypeParameter: CtxFn
        PsiElement(identifier)('CtxFn')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: asd
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('asd')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  FunctionalType: Ctx => A
                    SimpleType: Ctx
                      CodeReferenceElement: Ctx
                        PsiElement(identifier)('Ctx')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: A
            CodeReferenceElement: A
              PsiElement(identifier)('A')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: asd
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('asd')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: CtxFn[A]
                    SimpleType: CtxFn
                      CodeReferenceElement: CtxFn
                        PsiElement(identifier)('CtxFn')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: A
            CodeReferenceElement: A
              PsiElement(identifier)('A')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: HookCtx2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('HookCtx2')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScClass: P1
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(case)('case')
          PsiWhiteSpace(' ')
          PsiElement(class)('class')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('P1')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: P
              PsiElement(identifier)('P')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: H1
              PsiElement(identifier)('H1')
            PsiElement(])(']')
          PrimaryConstructor
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            Parameters
              ParametersClause
                PsiElement(()('(')
                ClassParameter: props
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('props')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: P
                      CodeReferenceElement: P
                        PsiElement(identifier)('P')
                PsiElement(,)(',')
                PsiWhiteSpace(' ')
                ClassParameter: hook1
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('hook1')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    SimpleType: H1
                      CodeReferenceElement: H1
                        PsiElement(identifier)('H1')
                PsiElement())(')')
          ExtendsBlock
            <empty list>
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: HookCtxFn2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('HookCtxFn2')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScTypeAliasDefinition: P1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('P1')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: P
              PsiElement(identifier)('P')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TypeParameter: H1
              PsiElement(identifier)('H1')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          TypeLambda: [A] =>> (P, H1) => A
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: A
                PsiElement(identifier)('A')
              PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=>>)('=>>')
            PsiWhiteSpace(' ')
            FunctionalType: (P, H1) => A
              TupleType: (P, H1)
                PsiElement(()('(')
                TypesList
                  SimpleType: P
                    CodeReferenceElement: P
                      PsiElement(identifier)('P')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: H1
                    CodeReferenceElement: H1
                      PsiElement(identifier)('H1')
                PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              SimpleType: A
                CodeReferenceElement: A
                  PsiElement(identifier)('A')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: Test2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test2')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: b
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: b
              PsiElement(identifier)('b')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: HookComponentBuilder2[
    HookCtx2.P1[String, Int],
    HookCtxFn2.P1[String, Int]
  ]
            SimpleType: HookComponentBuilder2
              CodeReferenceElement: HookComponentBuilder2
                PsiElement(identifier)('HookComponentBuilder2')
            TypeArgumentsList
              PsiElement([)('[')
              PsiWhiteSpace('\n    ')
              ParametrizedType: HookCtx2.P1[String, Int]
                SimpleType: HookCtx2.P1
                  CodeReferenceElement: HookCtx2.P1
                    CodeReferenceElement: HookCtx2
                      PsiElement(identifier)('HookCtx2')
                    PsiElement(.)('.')
                    PsiElement(identifier)('P1')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiElement(])(']')
              PsiElement(,)(',')
              PsiWhiteSpace('\n    ')
              ParametrizedType: HookCtxFn2.P1[String, Int]
                SimpleType: HookCtxFn2.P1
                  CodeReferenceElement: HookCtxFn2.P1
                    CodeReferenceElement: HookCtxFn2
                      PsiElement(identifier)('HookCtxFn2')
                    PsiElement(.)('.')
                    PsiElement(identifier)('P1')
                TypeArgumentsList
                  PsiElement([)('[')
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                  PsiElement(])(']')
              PsiWhiteSpace('\n  ')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n\n  ')
        MethodCall
          ReferenceExpression: b.asd
            ReferenceExpression: b
              PsiElement(identifier)('b')
            PsiElement(.)('.')
            PsiElement(identifier)('asd')
          ArgumentList
            PsiElement(()('(')
            FunctionExpression
              Parameters
                ParametersClause
                  Parameter: $
                    PsiElement(identifier)('$')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              InfixExpression
                ReferenceExpression: $.props.length
                  ReferenceExpression: $.props
                    ReferenceExpression: $
                      PsiElement(identifier)('$')
                    PsiElement(.)('.')
                    PsiElement(identifier)('props')
                  PsiElement(.)('.')
                  PsiElement(identifier)('length')
                PsiWhiteSpace(' ')
                ReferenceExpression: +
                  PsiElement(identifier)('+')
                PsiWhiteSpace(' ')
                ReferenceExpression: $.hook1
                  ReferenceExpression: $
                    PsiElement(identifier)('$')
                  PsiElement(.)('.')
                  PsiElement(identifier)('hook1')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: b.asd
            ReferenceExpression: b
              PsiElement(identifier)('b')
            PsiElement(.)('.')
            PsiElement(identifier)('asd')
          ArgumentList
            PsiElement(()('(')
            FunctionExpression
              Parameters
                ParametersClause
                  PsiElement(()('(')
                  Parameter: props
                    AnnotationsList
                      <empty list>
                    PsiElement(identifier)('props')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  Parameter: hook1
                    AnnotationsList
                      <empty list>
                    PsiElement(identifier)('hook1')
                  PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              InfixExpression
                ReferenceExpression: props.length
                  ReferenceExpression: props
                    PsiElement(identifier)('props')
                  PsiElement(.)('.')
                  PsiElement(identifier)('length')
                PsiWhiteSpace(' ')
                ReferenceExpression: +
                  PsiElement(identifier)('+')
                PsiWhiteSpace(' ')
                ReferenceExpression: hook1
                  PsiElement(identifier)('hook1')
            PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: Builder
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(final)('final')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Builder')
    TypeParameterClause
      PsiElement([)('[')
      TypeParameter: CtxFn
        PsiElement(identifier)('CtxFn')
        TypeParameterClause
          PsiElement([)('[')
          TypeParameter: _
            PsiElement(_)('_')
          PsiElement(])(']')
      PsiElement(])(']')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: asd
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('asd')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  FunctionalType: Int => A
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                    PsiWhiteSpace(' ')
                    PsiElement(=>)('=>')
                    PsiWhiteSpace(' ')
                    SimpleType: A
                      CodeReferenceElement: A
                        PsiElement(identifier)('A')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: A
            CodeReferenceElement: A
              PsiElement(identifier)('A')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: asd
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('asd')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: A
              PsiElement(identifier)('A')
            PsiElement(])(']')
          Parameters
            ParametersClause
              PsiElement(()('(')
              Parameter: f
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(identifier)('f')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                ParameterType
                  ParametrizedType: CtxFn[A]
                    SimpleType: CtxFn
                      CodeReferenceElement: CtxFn
                        PsiElement(identifier)('CtxFn')
                    TypeArgumentsList
                      PsiElement([)('[')
                      SimpleType: A
                        CodeReferenceElement: A
                          PsiElement(identifier)('A')
                      PsiElement(])(']')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: A
            CodeReferenceElement: A
              PsiElement(identifier)('A')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScObject: Test3
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test3')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: b1
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: b1
              PsiElement(identifier)('b1')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Builder[[Z] =>> (String, Int) => Z]
            SimpleType: Builder
              CodeReferenceElement: Builder
                PsiElement(identifier)('Builder')
            TypeArgumentsList
              PsiElement([)('[')
              TypeLambda: [Z] =>> (String, Int) => Z
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: Z
                    PsiElement(identifier)('Z')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=>>)('=>>')
                PsiWhiteSpace(' ')
                FunctionalType: (String, Int) => Z
                  TupleType: (String, Int)
                    PsiElement(()('(')
                    TypesList
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                    PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  SimpleType: Z
                    CodeReferenceElement: Z
                      PsiElement(identifier)('Z')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: ???
            PsiElement(identifier)('???')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: b1.asd
            ReferenceExpression: b1
              PsiElement(identifier)('b1')
            PsiElement(.)('.')
            PsiElement(identifier)('asd')
          ArgumentList
            PsiElement(()('(')
            ReferenceExpression: identity
              PsiElement(identifier)('identity')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: b1.asd
            ReferenceExpression: b1
              PsiElement(identifier)('b1')
            PsiElement(.)('.')
            PsiElement(identifier)('asd')
          ArgumentList
            PsiElement(()('(')
            InfixExpression
              ReferenceExpression: _.length
                UnderscoreSection
                  PsiElement(_)('_')
                PsiElement(.)('.')
                PsiElement(identifier)('length')
              PsiWhiteSpace(' ')
              ReferenceExpression: +
                PsiElement(identifier)('+')
              PsiWhiteSpace(' ')
              UnderscoreSection
                PsiElement(_)('_')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScTrait: Scala2TL
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(sealed)('sealed')
          PsiWhiteSpace(' ')
          PsiElement(trait)('trait')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Scala2TL')
          PsiWhiteSpace(' ')
          ExtendsBlock
            ScTemplateBody
              PsiElement({)('{')
              PsiWhiteSpace(' ')
              ScTypeAliasDefinition: F
                AnnotationsList
                  <empty list>
                Modifiers
                  <empty list>
                PsiElement(type)('type')
                PsiWhiteSpace(' ')
                PsiElement(identifier)('F')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: Z
                    PsiElement(identifier)('Z')
                  PsiElement(])(']')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                PsiWhiteSpace(' ')
                FunctionalType: (String, Int) => Z
                  TupleType: (String, Int)
                    PsiElement(()('(')
                    TypesList
                      SimpleType: String
                        CodeReferenceElement: String
                          PsiElement(identifier)('String')
                      PsiElement(,)(',')
                      PsiWhiteSpace(' ')
                      SimpleType: Int
                        CodeReferenceElement: Int
                          PsiElement(identifier)('Int')
                    PsiElement())(')')
                  PsiWhiteSpace(' ')
                  PsiElement(=>)('=>')
                  PsiWhiteSpace(' ')
                  SimpleType: Z
                    CodeReferenceElement: Z
                      PsiElement(identifier)('Z')
              PsiWhiteSpace(' ')
              PsiElement(})('}')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: b2
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: b2
              PsiElement(identifier)('b2')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Builder[Scala2TL#F]
            SimpleType: Builder
              CodeReferenceElement: Builder
                PsiElement(identifier)('Builder')
            TypeArgumentsList
              PsiElement([)('[')
              TypeProjection: Scala2TL#F
                SimpleType: Scala2TL
                  CodeReferenceElement: Scala2TL
                    PsiElement(identifier)('Scala2TL')
                PsiElement(#)('#')
                PsiElement(identifier)('F')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: b1
            PsiElement(identifier)('b1')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: b2.asd
            ReferenceExpression: b2
              PsiElement(identifier)('b2')
            PsiElement(.)('.')
            PsiElement(identifier)('asd')
          ArgumentList
            PsiElement(()('(')
            ReferenceExpression: identity
              PsiElement(identifier)('identity')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: b2.asd
            ReferenceExpression: b2
              PsiElement(identifier)('b2')
            PsiElement(.)('.')
            PsiElement(identifier)('asd')
          ArgumentList
            PsiElement(()('(')
            InfixExpression
              ReferenceExpression: _.length
                UnderscoreSection
                  PsiElement(_)('_')
                PsiElement(.)('.')
                PsiElement(identifier)('length')
              PsiWhiteSpace(' ')
              ReferenceExpression: +
                PsiElement(identifier)('+')
              PsiWhiteSpace(' ')
              UnderscoreSection
                PsiElement(_)('_')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScTypeAliasDefinition: Scala3TL
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(type)('type')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('Scala3TL')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          TypeLambda: [Z] =>> (String, Int) => Z
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: Z
                PsiElement(identifier)('Z')
              PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=>>)('=>>')
            PsiWhiteSpace(' ')
            FunctionalType: (String, Int) => Z
              TupleType: (String, Int)
                PsiElement(()('(')
                TypesList
                  SimpleType: String
                    CodeReferenceElement: String
                      PsiElement(identifier)('String')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  SimpleType: Int
                    CodeReferenceElement: Int
                      PsiElement(identifier)('Int')
                PsiElement())(')')
              PsiWhiteSpace(' ')
              PsiElement(=>)('=>')
              PsiWhiteSpace(' ')
              SimpleType: Z
                CodeReferenceElement: Z
                  PsiElement(identifier)('Z')
        PsiWhiteSpace('\n  ')
        ScPatternDefinition: b3
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: b3
              PsiElement(identifier)('b3')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Builder[Scala3TL]
            SimpleType: Builder
              CodeReferenceElement: Builder
                PsiElement(identifier)('Builder')
            TypeArgumentsList
              PsiElement([)('[')
              SimpleType: Scala3TL
                CodeReferenceElement: Scala3TL
                  PsiElement(identifier)('Scala3TL')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: b1
            PsiElement(identifier)('b1')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: b3.asd
            ReferenceExpression: b3
              PsiElement(identifier)('b3')
            PsiElement(.)('.')
            PsiElement(identifier)('asd')
          ArgumentList
            PsiElement(()('(')
            ReferenceExpression: identity
              PsiElement(identifier)('identity')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: b3.asd
            ReferenceExpression: b3
              PsiElement(identifier)('b3')
            PsiElement(.)('.')
            PsiElement(identifier)('asd')
          ArgumentList
            PsiElement(()('(')
            InfixExpression
              ReferenceExpression: _.length
                UnderscoreSection
                  PsiElement(_)('_')
                PsiElement(.)('.')
                PsiElement(identifier)('length')
              PsiWhiteSpace(' ')
              ReferenceExpression: +
                PsiElement(identifier)('+')
              PsiWhiteSpace(' ')
              UnderscoreSection
                PsiElement(_)('_')
            PsiElement())(')')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition: b4
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfPatterns
            ReferencePattern: b4
              PsiElement(identifier)('b4')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParametrizedType: Builder[({ type F[Z] = (String, Int) => Z })#F]
            SimpleType: Builder
              CodeReferenceElement: Builder
                PsiElement(identifier)('Builder')
            TypeArgumentsList
              PsiElement([)('[')
              TypeProjection: ({ type F[Z] = (String, Int) => Z })#F
                TypeInParenthesis: ({ type F[Z] = (String, Int) => Z })
                  PsiElement(()('(')
                  CompoundType: { type F[Z] = (String, Int) => Z }
                    Refinement
                      PsiElement({)('{')
                      PsiWhiteSpace(' ')
                      ScTypeAliasDefinition: F
                        AnnotationsList
                          <empty list>
                        Modifiers
                          <empty list>
                        PsiElement(type)('type')
                        PsiWhiteSpace(' ')
                        PsiElement(identifier)('F')
                        TypeParameterClause
                          PsiElement([)('[')
                          TypeParameter: Z
                            PsiElement(identifier)('Z')
                          PsiElement(])(']')
                        PsiWhiteSpace(' ')
                        PsiElement(=)('=')
                        PsiWhiteSpace(' ')
                        FunctionalType: (String, Int) => Z
                          TupleType: (String, Int)
                            PsiElement(()('(')
                            TypesList
                              SimpleType: String
                                CodeReferenceElement: String
                                  PsiElement(identifier)('String')
                              PsiElement(,)(',')
                              PsiWhiteSpace(' ')
                              SimpleType: Int
                                CodeReferenceElement: Int
                                  PsiElement(identifier)('Int')
                            PsiElement())(')')
                          PsiWhiteSpace(' ')
                          PsiElement(=>)('=>')
                          PsiWhiteSpace(' ')
                          SimpleType: Z
                            CodeReferenceElement: Z
                              PsiElement(identifier)('Z')
                      PsiWhiteSpace(' ')
                      PsiElement(})('}')
                  PsiElement())(')')
                PsiElement(#)('#')
                PsiElement(identifier)('F')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          ReferenceExpression: b1
            PsiElement(identifier)('b1')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: b4.asd
            ReferenceExpression: b4
              PsiElement(identifier)('b4')
            PsiElement(.)('.')
            PsiElement(identifier)('asd')
          ArgumentList
            PsiElement(()('(')
            ReferenceExpression: identity
              PsiElement(identifier)('identity')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: b4.asd
            ReferenceExpression: b4
              PsiElement(identifier)('b4')
            PsiElement(.)('.')
            PsiElement(identifier)('asd')
          ArgumentList
            PsiElement(()('(')
            InfixExpression
              ReferenceExpression: _.length
                UnderscoreSection
                  PsiElement(_)('_')
                PsiElement(.)('.')
                PsiElement(identifier)('length')
              PsiWhiteSpace(' ')
              ReferenceExpression: +
                PsiElement(identifier)('+')
              PsiWhiteSpace(' ')
              UnderscoreSection
                PsiElement(_)('_')
            PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
