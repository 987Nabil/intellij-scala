// https://github.com/lampepfl/dotty/issues/14278
class Foo

extension (foo: Foo)
  def patch(arg: List[Int], arg2: Int = 0): Unit = {}
  def patch(arg: Int): Unit = patch(List(arg))
-----
ScalaFile
  ScClass: Foo
    PsiComment(comment)('// https://github.com/lampepfl/dotty/issues/14278')
    PsiWhiteSpace('\n')
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Foo')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n\n')
  Extension on Foo
    PsiElement(extension)('extension')
    PsiWhiteSpace(' ')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: foo
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('foo')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            SimpleType: Foo
              CodeReferenceElement: Foo
                PsiElement(identifier)('Foo')
        PsiElement())(')')
    PsiWhiteSpace('\n  ')
    ScExtensionBody
      ScFunctionDefinition: patch
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(def)('def')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('patch')
        Parameters
          ParametersClause
            PsiElement(()('(')
            Parameter: arg
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(identifier)('arg')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParameterType
                ParametrizedType: List[Int]
                  SimpleType: List
                    CodeReferenceElement: List
                      PsiElement(identifier)('List')
                  TypeArgumentsList
                    PsiElement([)('[')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                    PsiElement(])(']')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            Parameter: arg2
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(identifier)('arg2')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParameterType
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              IntegerLiteral
                PsiElement(integer)('0')
            PsiElement())(')')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        SimpleType: Unit
          CodeReferenceElement: Unit
            PsiElement(identifier)('Unit')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        BlockExpression
          PsiElement({)('{')
          PsiElement(})('}')
      PsiWhiteSpace('\n  ')
      ScFunctionDefinition: patch
        AnnotationsList
          <empty list>
        Modifiers
          <empty list>
        PsiElement(def)('def')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('patch')
        Parameters
          ParametersClause
            PsiElement(()('(')
            Parameter: arg
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(identifier)('arg')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParameterType
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
            PsiElement())(')')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        SimpleType: Unit
          CodeReferenceElement: Unit
            PsiElement(identifier)('Unit')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        MethodCall
          ReferenceExpression: patch
            PsiElement(identifier)('patch')
          ArgumentList
            PsiElement(()('(')
            MethodCall
              ReferenceExpression: List
                PsiElement(identifier)('List')
              ArgumentList
                PsiElement(()('(')
                ReferenceExpression: arg
                  PsiElement(identifier)('arg')
                PsiElement())(')')
            PsiElement())(')')
