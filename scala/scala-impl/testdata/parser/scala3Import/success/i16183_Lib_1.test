package pkg

trait Foo1[A]
trait Foo2[A] extends Foo1[A]

trait Bar[F[_]]
object Bar {
  implicit val bar: Bar[pkg.Foo2] = ???
}

trait Qux
object Qux {
  implicit def qux[F[_]](implicit bar: Bar[F]): F[Qux] = ???
}
-----
ScalaFile
  ScPackaging
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    CodeReferenceElement: pkg
      PsiElement(identifier)('pkg')
    PsiWhiteSpace('\n\n')
    ScTrait: Foo1
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(trait)('trait')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Foo1')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: A
          PsiElement(identifier)('A')
        PsiElement(])(']')
      ExtendsBlock
        <empty list>
    PsiWhiteSpace('\n')
    ScTrait: Foo2
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(trait)('trait')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Foo2')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: A
          PsiElement(identifier)('A')
        PsiElement(])(']')
      PsiWhiteSpace(' ')
      ExtendsBlock
        PsiElement(extends)('extends')
        PsiWhiteSpace(' ')
        TemplateParents
          ConstructorInvocation
            ParametrizedType: Foo1[A]
              SimpleType: Foo1
                CodeReferenceElement: Foo1
                  PsiElement(identifier)('Foo1')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: A
                  CodeReferenceElement: A
                    PsiElement(identifier)('A')
                PsiElement(])(']')
    PsiWhiteSpace('\n\n')
    ScTrait: Bar
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(trait)('trait')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Bar')
      TypeParameterClause
        PsiElement([)('[')
        TypeParameter: F
          PsiElement(identifier)('F')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: _
              PsiElement(_)('_')
            PsiElement(])(']')
        PsiElement(])(']')
      ExtendsBlock
        <empty list>
    PsiWhiteSpace('\n')
    ScObject: Bar
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Bar')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScPatternDefinition: bar
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(implicit)('implicit')
            PsiWhiteSpace(' ')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            ListOfPatterns
              ReferencePattern: bar
                PsiElement(identifier)('bar')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParametrizedType: Bar[pkg.Foo2]
              SimpleType: Bar
                CodeReferenceElement: Bar
                  PsiElement(identifier)('Bar')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: pkg.Foo2
                  CodeReferenceElement: pkg.Foo2
                    CodeReferenceElement: pkg
                      PsiElement(identifier)('pkg')
                    PsiElement(.)('.')
                    PsiElement(identifier)('Foo2')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ReferenceExpression: ???
              PsiElement(identifier)('???')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    ScTrait: Qux
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(trait)('trait')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Qux')
      ExtendsBlock
        <empty list>
    PsiWhiteSpace('\n')
    ScObject: Qux
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      PsiElement(object)('object')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('Qux')
      PsiWhiteSpace(' ')
      ExtendsBlock
        ScTemplateBody
          PsiElement({)('{')
          PsiWhiteSpace('\n  ')
          ScFunctionDefinition: qux
            AnnotationsList
              <empty list>
            Modifiers
              PsiElement(implicit)('implicit')
            PsiWhiteSpace(' ')
            PsiElement(def)('def')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('qux')
            TypeParameterClause
              PsiElement([)('[')
              TypeParameter: F
                PsiElement(identifier)('F')
                TypeParameterClause
                  PsiElement([)('[')
                  TypeParameter: _
                    PsiElement(_)('_')
                  PsiElement(])(']')
              PsiElement(])(']')
            Parameters
              ParametersClause
                PsiElement(()('(')
                PsiElement(implicit)('implicit')
                PsiWhiteSpace(' ')
                Parameter: bar
                  AnnotationsList
                    <empty list>
                  Modifiers
                    <empty list>
                  PsiElement(identifier)('bar')
                  PsiElement(:)(':')
                  PsiWhiteSpace(' ')
                  ParameterType
                    ParametrizedType: Bar[F]
                      SimpleType: Bar
                        CodeReferenceElement: Bar
                          PsiElement(identifier)('Bar')
                      TypeArgumentsList
                        PsiElement([)('[')
                        SimpleType: F
                          CodeReferenceElement: F
                            PsiElement(identifier)('F')
                        PsiElement(])(']')
                PsiElement())(')')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParametrizedType: F[Qux]
              SimpleType: F
                CodeReferenceElement: F
                  PsiElement(identifier)('F')
              TypeArgumentsList
                PsiElement([)('[')
                SimpleType: Qux
                  CodeReferenceElement: Qux
                    PsiElement(identifier)('Qux')
                PsiElement(])(']')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            ReferenceExpression: ???
              PsiElement(identifier)('???')
          PsiWhiteSpace('\n')
          PsiElement(})('}')
