class Context {
  def normalMethod(): String = "normal"
  inline def inlineMethod(): String = "inline"
}

class Script(ctx: Context) {
  export ctx.*
  normalMethod()
  inlineMethod()
}

class MyScript(context: Context) extends Script(context) {
  normalMethod()
  inlineMethod()
}
-----
ScalaFile
  ScClass: Context
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Context')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: normalMethod
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('normalMethod')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          StringLiteral
            PsiElement(string content)('"normal"')
        PsiWhiteSpace('\n  ')
        ScFunctionDefinition: inlineMethod
          AnnotationsList
            <empty list>
          Modifiers
            PsiElement(inline)('inline')
          PsiWhiteSpace(' ')
          PsiElement(def)('def')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('inlineMethod')
          Parameters
            ParametersClause
              PsiElement(()('(')
              PsiElement())(')')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleType: String
            CodeReferenceElement: String
              PsiElement(identifier)('String')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          StringLiteral
            PsiElement(string content)('"inline"')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: Script
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Script')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: ctx
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('ctx')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Context
                CodeReferenceElement: Context
                  PsiElement(identifier)('Context')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScExportStatement
          PsiElement(export)('export')
          PsiWhiteSpace(' ')
          ImportExpression
            CodeReferenceElement: ctx
              PsiElement(identifier)('ctx')
            PsiElement(.)('.')
            PsiElement(*)('*')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: normalMethod
            PsiElement(identifier)('normalMethod')
          ArgumentList
            PsiElement(()('(')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: inlineMethod
            PsiElement(identifier)('inlineMethod')
          ArgumentList
            PsiElement(()('(')
            PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  ScClass: MyScript
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('MyScript')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter: context
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('context')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleType: Context
                CodeReferenceElement: Context
                  PsiElement(identifier)('Context')
          PsiElement())(')')
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: Script
            CodeReferenceElement: Script
              PsiElement(identifier)('Script')
          ArgumentList
            PsiElement(()('(')
            ReferenceExpression: context
              PsiElement(identifier)('context')
            PsiElement())(')')
      PsiWhiteSpace(' ')
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: normalMethod
            PsiElement(identifier)('normalMethod')
          ArgumentList
            PsiElement(()('(')
            PsiElement())(')')
        PsiWhiteSpace('\n  ')
        MethodCall
          ReferenceExpression: inlineMethod
            PsiElement(identifier)('inlineMethod')
          ArgumentList
            PsiElement(()('(')
            PsiElement())(')')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
