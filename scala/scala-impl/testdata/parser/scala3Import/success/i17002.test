import scala.annotation.meta.companionMethod

@companionMethod
class methOnly extends annotation.Annotation

class Test
object Test:

  @methOnly
  given test2[T]: Test with {}
-----
ScalaFile
  ScImportStatement
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    ImportExpression
      CodeReferenceElement: scala.annotation.meta.companionMethod
        CodeReferenceElement: scala.annotation.meta
          CodeReferenceElement: scala.annotation
            CodeReferenceElement: scala
              PsiElement(identifier)('scala')
            PsiElement(.)('.')
            PsiElement(identifier)('annotation')
          PsiElement(.)('.')
          PsiElement(identifier)('meta')
        PsiElement(.)('.')
        PsiElement(identifier)('companionMethod')
  PsiWhiteSpace('\n\n')
  ScClass: methOnly
    AnnotationsList
      Annotation
        PsiElement(@)('@')
        AnnotationExpression
          ConstructorInvocation
            SimpleType: companionMethod
              CodeReferenceElement: companionMethod
                PsiElement(identifier)('companionMethod')
    Modifiers
      <empty list>
    PsiWhiteSpace('\n')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('methOnly')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    PsiWhiteSpace(' ')
    ExtendsBlock
      PsiElement(extends)('extends')
      PsiWhiteSpace(' ')
      TemplateParents
        ConstructorInvocation
          SimpleType: annotation.Annotation
            CodeReferenceElement: annotation.Annotation
              CodeReferenceElement: annotation
                PsiElement(identifier)('annotation')
              PsiElement(.)('.')
              PsiElement(identifier)('Annotation')
  PsiWhiteSpace('\n\n')
  ScClass: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Modifiers
        <empty list>
      Parameters
        <empty list>
    ExtendsBlock
      <empty list>
  PsiWhiteSpace('\n')
  ScObject: Test
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Test')
    ExtendsBlock
      ScTemplateBody
        PsiElement(:)(':')
        PsiWhiteSpace('\n\n  ')
        ScGivenDefinition: test2
          AnnotationsList
            Annotation
              PsiElement(@)('@')
              AnnotationExpression
                ConstructorInvocation
                  SimpleType: methOnly
                    CodeReferenceElement: methOnly
                      PsiElement(identifier)('methOnly')
          Modifiers
            <empty list>
          PsiWhiteSpace('\n  ')
          PsiElement(given)('given')
          PsiWhiteSpace(' ')
          PsiElement(identifier)('test2')
          TypeParameterClause
            PsiElement([)('[')
            TypeParameter: T
              PsiElement(identifier)('T')
            PsiElement(])(']')
          Parameters
            <empty list>
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ExtendsBlock
            TemplateParents
              ConstructorInvocation
                SimpleType: Test
                  CodeReferenceElement: Test
                    PsiElement(identifier)('Test')
            PsiWhiteSpace(' ')
            PsiElement(with)('with')
            PsiWhiteSpace(' ')
            ScTemplateBody
              PsiElement({)('{')
              PsiElement(})('}')
