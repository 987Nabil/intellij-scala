//> using options -Xfatal-warnings -deprecation -feature

type Numeric = Double | Int

val v1 = 100
val v2 = 100.0
def check1(i: Double | Int | String): Unit = {
  i match {
    case a:(Double | Int) => println(s"numeric = $a")
    case _ => println("categorical")
  }
}
def check2(i: Double | Int | String): Unit = {
  i match {
    case a:Numeric => println(s"numeric = $a")
    case _ => println("categorical")
  }
}
-----
ScalaFile
  PsiElement(SCALA_DIRECTIVE)
    ScDirectiveToken(tDIRECTIVE_PREFIX)('//>')
    PsiWhiteSpace(' ')
    ScDirectiveToken(tDIRECTIVE_COMMAND)('using')
    PsiWhiteSpace(' ')
    ScDirectiveToken(tDIRECTIVE_KEY)('options')
    PsiWhiteSpace(' ')
    ScDirectiveToken(tDIRECTIVE_VALUE)('-Xfatal-warnings')
    PsiWhiteSpace(' ')
    ScDirectiveToken(tDIRECTIVE_VALUE)('-deprecation')
    PsiWhiteSpace(' ')
    ScDirectiveToken(tDIRECTIVE_VALUE)('-feature')
  PsiWhiteSpace('\n\n')
  ScTypeAliasDefinition: Numeric
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(type)('type')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Numeric')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    InfixType: Double | Int
      SimpleType: Double
        CodeReferenceElement: Double
          PsiElement(identifier)('Double')
      PsiWhiteSpace(' ')
      CodeReferenceElement: |
        PsiElement(identifier)('|')
      PsiWhiteSpace(' ')
      SimpleType: Int
        CodeReferenceElement: Int
          PsiElement(identifier)('Int')
  PsiWhiteSpace('\n\n')
  ScPatternDefinition: v1
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: v1
        PsiElement(identifier)('v1')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    IntegerLiteral
      PsiElement(integer)('100')
  PsiWhiteSpace('\n')
  ScPatternDefinition: v2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    ListOfPatterns
      ReferencePattern: v2
        PsiElement(identifier)('v2')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    DoubleLiteral
      PsiElement(double)('100.0')
  PsiWhiteSpace('\n')
  ScFunctionDefinition: check1
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('check1')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: i
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('i')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            InfixType: Double | Int | String
              InfixType: Double | Int
                SimpleType: Double
                  CodeReferenceElement: Double
                    PsiElement(identifier)('Double')
                PsiWhiteSpace(' ')
                CodeReferenceElement: |
                  PsiElement(identifier)('|')
                PsiWhiteSpace(' ')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
              PsiWhiteSpace(' ')
              CodeReferenceElement: |
                PsiElement(identifier)('|')
              PsiWhiteSpace(' ')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Unit
      CodeReferenceElement: Unit
        PsiElement(identifier)('Unit')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    BlockExpression
      PsiElement({)('{')
      PsiWhiteSpace('\n  ')
      MatchStatement
        ReferenceExpression: i
          PsiElement(identifier)('i')
        PsiWhiteSpace(' ')
        PsiElement(match)('match')
        PsiWhiteSpace(' ')
        PsiElement({)('{')
        PsiWhiteSpace('\n    ')
        CaseClauses
          CaseClause
            PsiElement(case)('case')
            PsiWhiteSpace(' ')
            Scala3 TypedPattern
              ReferencePattern: a
                PsiElement(identifier)('a')
              PsiElement(:)(':')
              TypePattern
                TypeInParenthesis: (Double | Int)
                  PsiElement(()('(')
                  InfixType: Double | Int
                    SimpleType: Double
                      CodeReferenceElement: Double
                        PsiElement(identifier)('Double')
                    PsiWhiteSpace(' ')
                    CodeReferenceElement: |
                      PsiElement(identifier)('|')
                    PsiWhiteSpace(' ')
                    SimpleType: Int
                      CodeReferenceElement: Int
                        PsiElement(identifier)('Int')
                  PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            BlockOfExpressions
              MethodCall
                ReferenceExpression: println
                  PsiElement(identifier)('println')
                ArgumentList
                  PsiElement(()('(')
                  InterpolatedStringLiteral
                    InterpolatedExpressionPrefix: s
                      PsiElement(interpolated string id)('s')
                    PsiElement(interpolated string)('"numeric = ')
                    PsiElement(interpolated string injection)('$')
                    ReferenceExpression: a
                      PsiElement(identifier)('a')
                    PsiElement(interpolated string end)('"')
                  PsiElement())(')')
          PsiWhiteSpace('\n    ')
          CaseClause
            PsiElement(case)('case')
            PsiWhiteSpace(' ')
            WildcardPattern
              PsiElement(_)('_')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            BlockOfExpressions
              MethodCall
                ReferenceExpression: println
                  PsiElement(identifier)('println')
                ArgumentList
                  PsiElement(()('(')
                  StringLiteral
                    PsiElement(string content)('"categorical"')
                  PsiElement())(')')
        PsiWhiteSpace('\n  ')
        PsiElement(})('}')
      PsiWhiteSpace('\n')
      PsiElement(})('}')
  PsiWhiteSpace('\n')
  ScFunctionDefinition: check2
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('check2')
    Parameters
      ParametersClause
        PsiElement(()('(')
        Parameter: i
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(identifier)('i')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          ParameterType
            InfixType: Double | Int | String
              InfixType: Double | Int
                SimpleType: Double
                  CodeReferenceElement: Double
                    PsiElement(identifier)('Double')
                PsiWhiteSpace(' ')
                CodeReferenceElement: |
                  PsiElement(identifier)('|')
                PsiWhiteSpace(' ')
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
              PsiWhiteSpace(' ')
              CodeReferenceElement: |
                PsiElement(identifier)('|')
              PsiWhiteSpace(' ')
              SimpleType: String
                CodeReferenceElement: String
                  PsiElement(identifier)('String')
        PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    SimpleType: Unit
      CodeReferenceElement: Unit
        PsiElement(identifier)('Unit')
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    PsiWhiteSpace(' ')
    BlockExpression
      PsiElement({)('{')
      PsiWhiteSpace('\n  ')
      MatchStatement
        ReferenceExpression: i
          PsiElement(identifier)('i')
        PsiWhiteSpace(' ')
        PsiElement(match)('match')
        PsiWhiteSpace(' ')
        PsiElement({)('{')
        PsiWhiteSpace('\n    ')
        CaseClauses
          CaseClause
            PsiElement(case)('case')
            PsiWhiteSpace(' ')
            Scala3 TypedPattern
              ReferencePattern: a
                PsiElement(identifier)('a')
              PsiElement(:)(':')
              TypePattern
                SimpleType: Numeric
                  CodeReferenceElement: Numeric
                    PsiElement(identifier)('Numeric')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            BlockOfExpressions
              MethodCall
                ReferenceExpression: println
                  PsiElement(identifier)('println')
                ArgumentList
                  PsiElement(()('(')
                  InterpolatedStringLiteral
                    InterpolatedExpressionPrefix: s
                      PsiElement(interpolated string id)('s')
                    PsiElement(interpolated string)('"numeric = ')
                    PsiElement(interpolated string injection)('$')
                    ReferenceExpression: a
                      PsiElement(identifier)('a')
                    PsiElement(interpolated string end)('"')
                  PsiElement())(')')
          PsiWhiteSpace('\n    ')
          CaseClause
            PsiElement(case)('case')
            PsiWhiteSpace(' ')
            WildcardPattern
              PsiElement(_)('_')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            BlockOfExpressions
              MethodCall
                ReferenceExpression: println
                  PsiElement(identifier)('println')
                ArgumentList
                  PsiElement(()('(')
                  StringLiteral
                    PsiElement(string content)('"categorical"')
                  PsiElement())(')')
        PsiWhiteSpace('\n  ')
        PsiElement(})('}')
      PsiWhiteSpace('\n')
      PsiElement(})('}')
